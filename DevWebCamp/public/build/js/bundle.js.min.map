{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponenteHidden","ponentes","ponentesFiltrados","listadoPonentes","respuesta","arrayPonentes","ponente","nombre","trim","apellido","id","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","ponenteId","onclick","seleccionarPonente","appendChild","noResultados","ponentePrevio","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas){\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e){\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')){//si algunos de los valores de busqueda esta vacio, entonces detiene la ejecucion\r\n                return;\r\n            }\r\n            \r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar las Horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n\r\n            //Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);          \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n            \r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));   \r\n        }\r\n\r\n        function seleccionarHora(e){\r\n\r\n            //Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n        \r\n            //llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        \r\n        }\r\n\r\n        \r\n    }\r\n\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n\r\n        obtenerPonentes();\r\n\r\n       ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes){\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente;\r\n                    }\r\n                });                \r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n            //limpiar el listado ponentes\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){        \r\n                ponentesFiltrados.forEach(ponente => {        \r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n                \r\n                //AÃ±adir al DOM\r\n        \r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No Hay Resultados para tu busqueda';\r\n            \r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n\r\n            function seleccionarPonente(e){\r\n                const ponente = e.target;\r\n\r\n                //Remover la clase previa\r\n                const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n                if(ponentePrevio){\r\n                    ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n                }\r\n\r\n                ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            \r\n                ponenteHidden.value = ponente.dataset.ponenteId;\r\n            }\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    \r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=tags]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar el input oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){//si el codigo de la tecla es igual a 44\r\n               if(e.target.value.trim() === '' || e.target.value < 1){\r\n                return;\r\n               }\r\n               \r\n                e.preventDefault();\r\n                \r\n                tags = [...tags, e.target.value.trim()];//hacemos una copia del tag y le colocamos el valor del evento sin estacios vacios\r\n                tagsInput.value = '';//limpiaos el input\r\n\r\n                mostrarTags();   \r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n            actualizarInputHidden();   \r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})();"]}