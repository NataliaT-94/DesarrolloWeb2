{"version":3,"sources":["tareas.js"],"names":["obtenerTareas","tareas","nuevaTareaBtn","document","querySelector","async","url","obtenerProyecto","respuesta","fetch","resultado","json","mostrarTareas","error","console","log","limpiarTareas","length","contenedorTareas","textNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","tarea","contenedorTarea","dataset","tareaId","id","nombreTarea","nombre","ondblclick","mostrarFormulario","editar","opcionesDiv","btnEstadoTarea","estado","toLowerCase","estadoTarea","cambiarEstadoTarea","btnEliminarTarea","idTarea","confirmarEliminarTarea","modal","innerHTML","setTimeout","addEventListener","e","preventDefault","target","contains","remove","submitFormularioNuevaTarea","value","trim","agregarTarea","mostrarAlerta","mensaje","tipo","referencia","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","datos","FormData","append","method","body","tareaObj","String","proyectoId","nuevoEstado","actualizarTarea","map","tareaMemoria","Swal","fire","title","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarTarea","filter","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","listadoTareas","firstChild","removeChild"],"mappings":"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","file":"bundle.js","sourcesContent":["obtenerTareas();\r\nlet tareas = [];\r\n\r\n\r\n//Boton para mostrar el Modal de Agregar tarea\r\nconst nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\nnuevaTareaBtn.addEventListener('click', function(){\r\n    mostrarFormulario();\r\n} );\r\n\r\nasync function obtenerTareas(){\r\n    try {\r\n        const id = obtenerProyecto();\r\n        const url = `/api/tareas?id=${id}`;\r\n        \r\n        const respuesta = await fetch(url);\r\n\r\n        const resultado = await respuesta.json();\r\n        \r\n        tareas = resultado.tareas;\r\n\r\n        \r\n        mostrarTareas();\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n        \r\n    }\r\n}\r\n\r\nfunction mostrarTareas(){\r\n\r\n    limpiarTareas();\r\n    \r\n    if(tareas.length === 0){\r\n        const contenedorTareas = document.querySelector('#listado-tareas');\r\n        const textNoTareas = document.createElement('LI');\r\n        textNoTareas.textContent = \"No hay Tareas\";\r\n        textNoTareas.classList.add('no-tareas');\r\n\r\n        contenedorTareas.appendChild(textNoTareas);\r\n    }\r\n\r\n    const estados = {\r\n        0: 'Pendiente',\r\n        1: 'Completa'\r\n    }\r\n\r\n    tareas.forEach(tarea => {\r\n        const contenedorTarea = document.createElement('LI');\r\n        contenedorTarea.dataset.tareaId = tarea.id;\r\n        contenedorTarea.classList.add('tarea');\r\n\r\n        const nombreTarea = document.createElement('P');\r\n        nombreTarea.textContent = tarea.nombre;\r\n        nombreTarea.ondblclick = function(){\r\n            mostrarFormulario(editar = true, tarea);\r\n        }\r\n\r\n        const opcionesDiv = document.createElement('DIV');\r\n        opcionesDiv.classList.add('opciones');\r\n\r\n        //Botones\r\n        const btnEstadoTarea = document.createElement('BUTTON');\r\n        btnEstadoTarea.classList.add('estado-tarea');\r\n        btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n        btnEstadoTarea.textContent = estados[tarea.estado];\r\n        btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n        btnEstadoTarea.ondblclick = function(){//doble click\r\n            cambiarEstadoTarea({...tarea});//sacamos una copia del objeto la cual vamos a modificar\r\n            \r\n        }\r\n\r\n        const btnEliminarTarea = document.createElement('BUTTON');\r\n        btnEliminarTarea.classList.add('eliminar-tarea');\r\n        btnEliminarTarea.dataset.idTarea = tarea.id;\r\n        btnEliminarTarea.textContent = 'Eliminar';\r\n        btnEliminarTarea.ondblclick = function(){\r\n            confirmarEliminarTarea({...tarea});\r\n        }\r\n\r\n        opcionesDiv.appendChild(btnEstadoTarea);\r\n        opcionesDiv.appendChild(btnEliminarTarea);\r\n\r\n        contenedorTarea.appendChild(nombreTarea);\r\n        contenedorTarea.appendChild(opcionesDiv);\r\n\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        listadoTareas.appendChild(contenedorTarea);\r\n        \r\n    });\r\n    \r\n}\r\n\r\nfunction mostrarFormulario(editar = false, tarea = {}){\r\n    const modal = document.createElement('DIV');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <form class=\"formulario nueva-tarea\">\r\n            <legend>${editar ? 'Editar Tarea' : 'Añade una nueva tarea'}</legend>\r\n            <div class=\"campo\">\r\n                <label>Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" placeholder=\"${tarea.nombre ? 'Edita la Tarea' : 'Añadir Tarea al Proyecto Actual'}\" id=\"tarea\" value=\"${tarea.nombre ? tarea.nombre : ''}\"/>\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${tarea.nombre ? 'Guardar Cambios' : 'Añadir Tarea'}\"/>\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n    `;\r\n    \r\n    setTimeout(() => {\r\n         const formulario = document.querySelector('.formulario');\r\n         formulario.classList.add('animar');\r\n    }, 0);\r\n\r\n    modal.addEventListener('click', function(e){\r\n        e.preventDefault();\r\n\r\n        if(e.target.classList.contains('cerrar-modal')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('cerrar');    \r\n\r\n             setTimeout(() => {\r\n                modal.remove();\r\n            }, 500);\r\n        }\r\n\r\n        if(e.target.classList.contains('submit-nueva-tarea')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            submitFormularioNuevaTarea();\r\n\r\n        }\r\n    })\r\n\r\n    document.querySelector('.dashboard').appendChild(modal);\r\n}\r\n\r\n    function submitFormularioNuevaTarea(){\r\n        const tarea = document.querySelector('#tarea').value.trim();//trim: elimini el espacio al inicio y al final\r\n\r\n        if(tarea === ''){\r\n            //Mostrar una alerta de error\r\n            mostrarAlerta('El nombre de la tarea es Obligatorio', 'error', document.querySelector('.formulario legend'));\r\n            return;\r\n        }\r\n\r\n        agregarTarea(tarea);\r\n    \r\n    }\r\n    \r\n    //Muestra un mensaje en la interfaz\r\n    function mostrarAlerta(mensaje, tipo, referencia){\r\n\r\n        //Previene la creacion de multiples alertas\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n\r\n        if(alertaPrevia){\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del legend\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        //Eliminar la alerta despues de unos segundos\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    //Consultar el servidor para añadir una nueva tarea al proyecto actual\r\n    async function agregarTarea(tarea){\r\n      //Construir la peticion\r\n       const datos = new FormData();\r\n        datos.append('nombre', tarea);        \r\n        datos.append('proyectoId', obtenerProyecto());        \r\n\r\n        try{\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n\r\n            });\r\n           const resultado = await respuesta.json();\r\n\r\n           mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n            \r\n           if(resultado.tipo === 'exito'){\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 1000);  \r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado: \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas =[...tareas, tareaObj];//tengo una copia de las tareas, y le agrega la nueva tarea                \r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea){\r\n\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\" : \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea){\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        // for(let valor of datos.values()){ para poder ver los datos en el formdata antes de enviar al servidor\r\n        //     console.log(valor);\r\n        // }\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.respuesta.tipo === 'exito'){\r\n                mostrarAlerta(\r\n                    resultado.respuesta.mensaje, \r\n                    resultado.respuesta.tipo, \r\n                    document.querySelector('.contenedor-nueva-tarea')\r\n                );\r\n\r\n                tareas = tareas.map(tareaMemoria =>{//map crea un arreglo ya con la actualizacion\r\n                    if(tareaMemoria.id === id){\r\n                        tareaMemoria.estado = estado;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n                mostrarTareas();   \r\n            }\r\n             \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea){\r\n        Swal.fire({\r\n            title: \"Eliminar Tarea?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si',\r\n            cancelButtonText: 'No'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n          });\r\n    }\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n\r\n            if(resultado.resultado){\r\n                // mostrarAlerta(\r\n                //     resultado.mensaje, \r\n                //     resultado.tipo, \r\n                //     document.querySelector('.contenedor-nueva-tarea')\r\n                // );\r\n                Swal.fire('Eliminado!', resultado.mensaje, 'success');\r\n\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== tarea.id);//genera una copia y solo trae todas que sean diferentes al id que seleccione\r\n                mostrarTareas();\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function obtenerProyecto(){\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());//sirve para iterar objetos como el formdata/entries trae los datos del obje\r\n        return proyecto.id;\r\n    }\r\n\r\n\r\n    function limpiarTareas(){\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        // listadoTareas.innerHTML = '';\r\n\r\n        while(listadoTareas.firstChild){\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    "]}