{"version":3,"sources":["tareas.js"],"names":["obtenerTareas","tareas","filtradas","nuevaTareaBtn","document","querySelector","addEventListener","mostrarFormulario","filtros","querySelectorAll","filtrarTareas","e","filtro","target","value","filter","tarea","estado","mostrarTareas","async","url","obtenerProyecto","respuesta","fetch","resultado","json","error","console","log","limpiarTareas","totalPendientes","totalCompletas","arrayTareas","length","contenedorTareas","textNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","contenedorTarea","dataset","tareaId","id","nombreTarea","nombre","ondblclick","editar","opcionesDiv","btnEstadoTarea","toLowerCase","estadoTarea","cambiarEstadoTarea","btnEliminarTarea","idTarea","confirmarEliminarTarea","pendientesRadio","disabled","completasRadio","modal","innerHTML","setTimeout","preventDefault","contains","remove","trim","mostrarAlerta","actualizarTarea","agregarTarea","mensaje","tipo","referencia","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","datos","FormData","append","method","body","tareaObj","String","proyectoId","nuevoEstado","Swal","fire","map","tareaMemoria","title","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarTarea","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","listadoTareas","firstChild","removeChild","radio"],"mappings":"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","file":"bundle.js","sourcesContent":["obtenerTareas();\r\nlet tareas = [];\r\nlet filtradas = [];\r\n\r\n\r\n//Boton para mostrar el Modal de Agregar tarea\r\nconst nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\nnuevaTareaBtn.addEventListener('click', function(){\r\n    mostrarFormulario();\r\n} );\r\n\r\n//Filtros de Busqueda\r\nconst filtros = document.querySelectorAll('#filtros input[type=\"radio\"]');\r\nfiltros.forEach(radio => {\r\n    radio.addEventListener('input', filtrarTareas);\r\n});\r\n\r\nfunction filtrarTareas(e){\r\n    const filtro = e.target.value;\r\n\r\n    if(filtro !== ''){\r\n        filtradas = tareas.filter(tarea => tarea.estado === filtro);\r\n        \r\n    } else {\r\n        filtradas = [];\r\n        \r\n    }\r\n    mostrarTareas();\r\n}\r\n\r\n\r\nasync function obtenerTareas(){\r\n    try {\r\n        const id = obtenerProyecto();\r\n        const url = `/api/tareas?id=${id}`;\r\n        \r\n        const respuesta = await fetch(url);\r\n\r\n        const resultado = await respuesta.json();\r\n        \r\n        tareas = resultado.tareas;\r\n\r\n        \r\n        mostrarTareas();\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n        \r\n    }\r\n}\r\n\r\nfunction mostrarTareas(){\r\n\r\n    limpiarTareas();\r\n    totalPendientes();\r\n    totalCompletas();\r\n\r\n    const arrayTareas = filtradas.length ? filtradas : tareas;\r\n    \r\n    if(arrayTareas.length === 0){\r\n        const contenedorTareas = document.querySelector('#listado-tareas');\r\n        const textNoTareas = document.createElement('LI');\r\n        textNoTareas.textContent = \"No hay Tareas\";\r\n        textNoTareas.classList.add('no-tareas');\r\n\r\n        contenedorTareas.appendChild(textNoTareas);\r\n    }\r\n\r\n    const estados = {\r\n        0: 'Pendiente',\r\n        1: 'Completa'\r\n    }\r\n\r\n    arrayTareas.forEach(tarea => {\r\n        const contenedorTarea = document.createElement('LI');\r\n        contenedorTarea.dataset.tareaId = tarea.id;\r\n        contenedorTarea.classList.add('tarea');\r\n\r\n        const nombreTarea = document.createElement('P');\r\n        nombreTarea.textContent = tarea.nombre;\r\n        nombreTarea.ondblclick = function(){\r\n            mostrarFormulario(editar = true, {...tarea});\r\n        }\r\n\r\n        const opcionesDiv = document.createElement('DIV');\r\n        opcionesDiv.classList.add('opciones');\r\n\r\n        //Botones\r\n        const btnEstadoTarea = document.createElement('BUTTON');\r\n        btnEstadoTarea.classList.add('estado-tarea');\r\n        btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n        btnEstadoTarea.textContent = estados[tarea.estado];\r\n        btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n        btnEstadoTarea.ondblclick = function(){//doble click\r\n            cambiarEstadoTarea({...tarea});//sacamos una copia del objeto la cual vamos a modificar\r\n            \r\n        }\r\n\r\n        const btnEliminarTarea = document.createElement('BUTTON');\r\n        btnEliminarTarea.classList.add('eliminar-tarea');\r\n        btnEliminarTarea.dataset.idTarea = tarea.id;\r\n        btnEliminarTarea.textContent = 'Eliminar';\r\n        btnEliminarTarea.ondblclick = function(){\r\n            confirmarEliminarTarea({...tarea});\r\n        }\r\n\r\n        opcionesDiv.appendChild(btnEstadoTarea);\r\n        opcionesDiv.appendChild(btnEliminarTarea);\r\n\r\n        contenedorTarea.appendChild(nombreTarea);\r\n        contenedorTarea.appendChild(opcionesDiv);\r\n\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        listadoTareas.appendChild(contenedorTarea);\r\n        \r\n    }); \r\n}\r\n\r\nfunction totalPendientes(){\r\n    const totalPendientes = tareas.filter(tarea => tarea.estado === \"0\");\r\n    const pendientesRadio = document.querySelector('#pendientes');\r\n\r\n    if(totalPendientes.length === 0){\r\n        pendientesRadio.disabled = true;\r\n    } else {\r\n        pendientesRadio.disabled = false;\r\n\r\n    }\r\n}\r\n\r\nfunction totalCompletas(){\r\n    const totalCompletas = tareas.filter(tarea => tarea.estado === \"1\");\r\n    const completasRadio = document.querySelector('#completadas');\r\n\r\n    if(totalCompletas.length === 0){\r\n        completasRadio.disabled = true;\r\n    } else {\r\n        completasRadio.disabled = false;\r\n\r\n    }\r\n}\r\n\r\nfunction mostrarFormulario(editar = false, tarea = {}){\r\n    const modal = document.createElement('DIV');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <form class=\"formulario nueva-tarea\">\r\n            <legend>${editar ? 'Editar Tarea' : 'Añade una nueva tarea'}</legend>\r\n            <div class=\"campo\">\r\n                <label>Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" placeholder=\"${tarea.nombre ? 'Edita la Tarea' : 'Añadir Tarea al Proyecto Actual'}\" id=\"tarea\" value=\"${tarea.nombre ? tarea.nombre : ''}\"/>\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${tarea.nombre ? 'Guardar Cambios' : 'Añadir Tarea'}\"/>\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n    `;\r\n    \r\n    setTimeout(() => {\r\n         const formulario = document.querySelector('.formulario');\r\n         formulario.classList.add('animar');\r\n    }, 0);\r\n\r\n    modal.addEventListener('click', function(e){\r\n        e.preventDefault();\r\n\r\n        if(e.target.classList.contains('cerrar-modal')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('cerrar');    \r\n\r\n             setTimeout(() => {\r\n                modal.remove();\r\n            }, 500);\r\n        }\r\n\r\n        if(e.target.classList.contains('submit-nueva-tarea')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const nombreTarea = document.querySelector('#tarea').value.trim();//trim: elimini el espacio al inicio y al final\r\n\r\n                if(nombreTarea === ''){\r\n                    //Mostrar una alerta de error\r\n                    mostrarAlerta('El nombre de la tarea es Obligatorio', 'error', document.querySelector('.formulario legend'));\r\n                    return;\r\n                }\r\n                if(editar){\r\n                    tarea.nombre = nombreTarea;\r\n                    actualizarTarea(tarea);\r\n                    \r\n                } else {\r\n                    agregarTarea(nombreTarea);\r\n                    \r\n                }\r\n        }\r\n    })\r\n\r\n    document.querySelector('.dashboard').appendChild(modal);\r\n}\r\n\r\n    \r\n    //Muestra un mensaje en la interfaz\r\n    function mostrarAlerta(mensaje, tipo, referencia){\r\n\r\n        //Previene la creacion de multiples alertas\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n\r\n        if(alertaPrevia){\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del legend\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        //Eliminar la alerta despues de unos segundos\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    //Consultar el servidor para añadir una nueva tarea al proyecto actual\r\n    async function agregarTarea(tarea){\r\n      //Construir la peticion\r\n       const datos = new FormData();\r\n        datos.append('nombre', tarea);        \r\n        datos.append('proyectoId', obtenerProyecto());        \r\n\r\n        try{\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n\r\n            });\r\n           const resultado = await respuesta.json();\r\n\r\n           mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n            \r\n           if(resultado.tipo === 'exito'){\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 1000);  \r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado: \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas =[...tareas, tareaObj];//tengo una copia de las tareas, y le agrega la nueva tarea                \r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea){\r\n\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\" : \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea){\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        // for(let valor of datos.values()){ para poder ver los datos en el formdata antes de enviar al servidor\r\n        //     console.log(valor);\r\n        // }\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.respuesta.tipo === 'exito'){\r\n                Swal.fire(\r\n                    resultado.respuesta.mensaje,\r\n                    resultado.respuesta.mensaje,\r\n                    'success'\r\n                );\r\n\r\n                const modal = document.querySelector('.modal');\r\n                if(modal){\r\n                    modal.remove();\r\n                }\r\n                tareas = tareas.map(tareaMemoria =>{//map crea un arreglo ya con la actualizacion\r\n                    if(tareaMemoria.id === id){\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n                mostrarTareas();   \r\n            }\r\n             \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea){\r\n        Swal.fire({\r\n            title: \"Eliminar Tarea?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si',\r\n            cancelButtonText: 'No'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n          });\r\n    }\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n\r\n            if(resultado.resultado){\r\n                // mostrarAlerta(\r\n                //     resultado.mensaje, \r\n                //     resultado.tipo, \r\n                //     document.querySelector('.contenedor-nueva-tarea')\r\n                // );\r\n                Swal.fire('Eliminado!', resultado.mensaje, 'success');\r\n\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== tarea.id);//genera una copia y solo trae todas que sean diferentes al id que seleccione\r\n                mostrarTareas();\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function obtenerProyecto(){\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());//sirve para iterar objetos como el formdata/entries trae los datos del obje\r\n        return proyecto.id;\r\n    }\r\n\r\n\r\n    function limpiarTareas(){\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        // listadoTareas.innerHTML = '';\r\n\r\n        while(listadoTareas.firstChild){\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    "]}