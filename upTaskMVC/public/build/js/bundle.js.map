{"version":3,"sources":["tareas.js"],"names":["obtenerTareas","tareas","nuevaTareaBtn","document","querySelector","async","url","obtenerProyecto","respuesta","fetch","resultado","json","mostrarTareas","error","console","log","limpiarTareas","length","contenedorTareas","textNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","tarea","contenedorTarea","dataset","tareaId","id","nombreTarea","nombre","opcionesDiv","btnEstadoTarea","estado","toLowerCase","estadoTarea","btnEliminarTarea","idTarea","mostrarFormulario","modal","innerHTML","setTimeout","addEventListener","e","preventDefault","target","contains","remove","submitFormularioNuevaTarea","value","trim","agregarTarea","mostrarAlerta","mensaje","tipo","referencia","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","datos","FormData","append","method","body","tareaObj","String","proyectoId","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","listadoTareas","firstChild","removeChild"],"mappings":"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","file":"bundle.js","sourcesContent":["obtenerTareas();\r\nlet tareas = [];\r\n\r\n\r\n//Boton para mostrar el Modal de Agregar tarea\r\nconst nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\nnuevaTareaBtn.addEventListener('click', mostrarFormulario);\r\n\r\nasync function obtenerTareas(){\r\n    try {\r\n        const id = obtenerProyecto();\r\n        const url = `/api/tareas?id=${id}`;\r\n        \r\n        const respuesta = await fetch(url);\r\n\r\n        const resultado = await respuesta.json();\r\n        \r\n        tareas = resultado.tareas;\r\n\r\n        \r\n        mostrarTareas();\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n        \r\n    }\r\n}\r\n\r\nfunction mostrarTareas(){\r\n\r\n    limpiarTareas();\r\n    \r\n    if(tareas.length === 0){\r\n        const contenedorTareas = document.querySelector('#listado-tareas');\r\n        const textNoTareas = document.createElement('LI');\r\n        textNoTareas.textContent = \"No hay Tareas\";\r\n        textNoTareas.classList.add('no-tareas');\r\n\r\n        contenedorTareas.appendChild(textNoTareas);\r\n    }\r\n\r\n    const estados = {\r\n        0: 'Pendiente',\r\n        1: 'Completa'\r\n    }\r\n\r\n    tareas.forEach(tarea => {\r\n        const contenedorTarea = document.createElement('LI');\r\n        contenedorTarea.dataset.tareaId = tarea.id;\r\n        contenedorTarea.classList.add('tarea');\r\n\r\n        const nombreTarea = document.createElement('P');\r\n        nombreTarea.textContent = tarea.nombre;\r\n\r\n        const opcionesDiv = document.createElement('DIV');\r\n        opcionesDiv.classList.add('opciones');\r\n\r\n        //Botones\r\n        const btnEstadoTarea = document.createElement('BUTTON');\r\n        btnEstadoTarea.classList.add('estado-tarea');\r\n        btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n        btnEstadoTarea.textContent = estados[tarea.estado];\r\n        btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n\r\n        const btnEliminarTarea = document.createElement('BUTTON');\r\n        btnEliminarTarea.classList.add('eliminar-tarea');\r\n        btnEliminarTarea.dataset.idTarea = tarea.id;\r\n        btnEliminarTarea.textContent = 'Eliminar';\r\n\r\n        opcionesDiv.appendChild(btnEstadoTarea);\r\n        opcionesDiv.appendChild(btnEliminarTarea);\r\n\r\n        contenedorTarea.appendChild(nombreTarea);\r\n        contenedorTarea.appendChild(opcionesDiv);\r\n\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        listadoTareas.appendChild(contenedorTarea);\r\n        \r\n    });\r\n    \r\n}\r\n\r\nfunction mostrarFormulario(){\r\n    const modal = document.createElement('DIV');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <form class=\"formulario nueva-tarea\">\r\n            <legend>A単ade una nueva tarea</legend>\r\n            <div class=\"campo\">\r\n                <label>Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" placeholder=\"A単adir Tarea al Proyecto Actual\" id=\"tarea\"/>\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"A単adir Tarea\"/>\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n    `;\r\n    \r\n    setTimeout(() => {\r\n         const formulario = document.querySelector('.formulario');\r\n         formulario.classList.add('animar');\r\n    }, 0);\r\n\r\n    modal.addEventListener('click', function(e){\r\n        e.preventDefault();\r\n\r\n        if(e.target.classList.contains('cerrar-modal')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('cerrar');    \r\n\r\n             setTimeout(() => {\r\n                modal.remove();\r\n            }, 500);\r\n        }\r\n\r\n        if(e.target.classList.contains('submit-nueva-tarea')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            submitFormularioNuevaTarea();\r\n\r\n        }\r\n    })\r\n\r\n    document.querySelector('.dashboard').appendChild(modal);\r\n}\r\n\r\n    function submitFormularioNuevaTarea(){\r\n        const tarea = document.querySelector('#tarea').value.trim();//trim: elimini el espacio al inicio y al final\r\n\r\n        if(tarea === ''){\r\n            //Mostrar una alerta de error\r\n            mostrarAlerta('El nombre de la tarea es Obligatorio', 'error', document.querySelector('.formulario legend'));\r\n            return;\r\n        }\r\n\r\n        agregarTarea(tarea);\r\n    \r\n    }\r\n    \r\n    //Muestra un mensaje en la interfaz\r\n    function mostrarAlerta(mensaje, tipo, referencia){\r\n\r\n        //Previene la creacion de multiples alertas\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n\r\n        if(alertaPrevia){\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del legend\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        //Eliminar la alerta despues de unos segundos\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    //Consultar el servidor para a単adir una nueva tarea al proyecto actual\r\n    async function agregarTarea(tarea){\r\n      //Construir la peticion\r\n       const datos = new FormData();\r\n        datos.append('nombre', tarea);        \r\n        datos.append('proyectoId', obtenerProyecto());        \r\n\r\n        try{\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n\r\n            });\r\n           const resultado = await respuesta.json();\r\n\r\n           mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n            \r\n           if(resultado.tipo === 'exito'){\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 3000);  \r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado: \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas =[...tareas, tareaObj];//tengo una copia de las tareas, y le agrega la nueva tarea                \r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function obtenerProyecto(){\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());//sirve para iterar objetos como el formdata/entries trae los datos del obje\r\n        return proyecto.id;\r\n    }\r\n\r\n\r\n    function limpiarTareas(){\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        // listadoTareas.innerHTML = '';\r\n\r\n        while(listadoTareas.firstChild){\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    "]}