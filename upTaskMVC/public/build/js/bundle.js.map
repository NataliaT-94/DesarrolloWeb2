{"version":3,"sources":["app.js","tareas.js"],"names":["mobileMenuBtn","document","querySelector","cerrarMenuBtn","sidebar","addEventListener","classList","add","setTimeout","remove","anchoPantalla","body","clientWidth","window","obtenerTareas","tareas","filtradas","nuevaTareaBtn","mostrarFormulario","filtros","querySelectorAll","filtrarTareas","e","filtro","target","value","filter","tarea","estado","mostrarTareas","async","url","obtenerProyecto","respuesta","fetch","resultado","json","error","console","log","limpiarTareas","totalPendientes","totalCompletas","arrayTareas","length","contenedorTareas","textNoTareas","createElement","textContent","appendChild","estados","0","1","forEach","contenedorTarea","dataset","tareaId","id","nombreTarea","nombre","ondblclick","editar","opcionesDiv","btnEstadoTarea","toLowerCase","estadoTarea","cambiarEstadoTarea","btnEliminarTarea","idTarea","confirmarEliminarTarea","pendientesRadio","disabled","completasRadio","modal","innerHTML","preventDefault","contains","trim","mostrarAlerta","actualizarTarea","agregarTarea","mensaje","tipo","referencia","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","datos","FormData","append","method","tareaObj","String","proyectoId","nuevoEstado","Swal","fire","map","tareaMemoria","title","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarTarea","proyectoParams","URLSearchParams","location","search","Object","fromEntries","entries","listadoTareas","firstChild","removeChild","radio"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n    const mobileMenuBtn = document.querySelector('#mobile-menu');\r\n    const cerrarMenuBtn = document.querySelector('#cerrar-menu');\r\n    const sidebar = document.querySelector('.sidebar');\r\n    \r\n    if(mobileMenuBtn){\r\n        mobileMenuBtn.addEventListener('click', function(){\r\n            sidebar.classList.add('mostrar');\r\n        });\r\n    }\r\n    \r\n    if(cerrarMenuBtn){\r\n        cerrarMenuBtn.addEventListener('click', function(){\r\n            sidebar.classList.add('ocultar');\r\n\r\n            setTimeout(() => {\r\n                sidebar.classList.remove('mostrar');\r\n                sidebar.classList.remove('ocultar');\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    //Elimina la clase de mostrar, en tamaÃ±o de tablet y mayores\r\n    const anchoPantalla = document.body.clientWidth;\r\n\r\n    window.addEventListener('resize', function(){\r\n    const anchoPantalla = document.body.clientWidth;\r\n        if(anchoPantalla >= 768){\r\n            sidebar.classList.remove('mostrar');\r\n        }\r\n    })\r\n    ","\r\n\r\nobtenerTareas();\r\nlet tareas = [];\r\nlet filtradas = [];\r\n\r\n\r\n\r\n\r\n//Boton para mostrar el Modal de Agregar tarea\r\nconst nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\nnuevaTareaBtn.addEventListener('click', function(){\r\n    mostrarFormulario();\r\n} );\r\n\r\n//Filtros de Busqueda\r\nconst filtros = document.querySelectorAll('#filtros input[type=\"radio\"]');\r\nfiltros.forEach(radio => {\r\n    radio.addEventListener('input', filtrarTareas);\r\n});\r\n\r\nfunction filtrarTareas(e){\r\n    const filtro = e.target.value;\r\n\r\n    if(filtro !== ''){\r\n        filtradas = tareas.filter(tarea => tarea.estado === filtro);\r\n        \r\n    } else {\r\n        filtradas = [];\r\n        \r\n    }\r\n    mostrarTareas();\r\n}\r\n\r\n\r\nasync function obtenerTareas(){\r\n    try {\r\n        const id = obtenerProyecto();\r\n        const url = `/api/tareas?id=${id}`;\r\n        \r\n        const respuesta = await fetch(url);\r\n\r\n        const resultado = await respuesta.json();\r\n        \r\n        tareas = resultado.tareas;\r\n\r\n        \r\n        mostrarTareas();\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n        \r\n    }\r\n}\r\n\r\nfunction mostrarTareas(){\r\n\r\n    limpiarTareas();\r\n    totalPendientes();\r\n    totalCompletas();\r\n\r\n    const arrayTareas = filtradas.length ? filtradas : tareas;\r\n    \r\n    if(arrayTareas.length === 0){\r\n        const contenedorTareas = document.querySelector('#listado-tareas');\r\n        const textNoTareas = document.createElement('LI');\r\n        textNoTareas.textContent = \"No hay Tareas\";\r\n        textNoTareas.classList.add('no-tareas');\r\n\r\n        contenedorTareas.appendChild(textNoTareas);\r\n    }\r\n\r\n    const estados = {\r\n        0: 'Pendiente',\r\n        1: 'Completa'\r\n    }\r\n\r\n    arrayTareas.forEach(tarea => {\r\n        const contenedorTarea = document.createElement('LI');\r\n        contenedorTarea.dataset.tareaId = tarea.id;\r\n        contenedorTarea.classList.add('tarea');\r\n\r\n        const nombreTarea = document.createElement('P');\r\n        nombreTarea.textContent = tarea.nombre;\r\n        nombreTarea.ondblclick = function(){\r\n            mostrarFormulario(editar = true, {...tarea});\r\n        }\r\n\r\n        const opcionesDiv = document.createElement('DIV');\r\n        opcionesDiv.classList.add('opciones');\r\n\r\n        //Botones\r\n        const btnEstadoTarea = document.createElement('BUTTON');\r\n        btnEstadoTarea.classList.add('estado-tarea');\r\n        btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n        btnEstadoTarea.textContent = estados[tarea.estado];\r\n        btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n        btnEstadoTarea.ondblclick = function(){//doble click\r\n            cambiarEstadoTarea({...tarea});//sacamos una copia del objeto la cual vamos a modificar\r\n            \r\n        }\r\n\r\n        const btnEliminarTarea = document.createElement('BUTTON');\r\n        btnEliminarTarea.classList.add('eliminar-tarea');\r\n        btnEliminarTarea.dataset.idTarea = tarea.id;\r\n        btnEliminarTarea.textContent = 'Eliminar';\r\n        btnEliminarTarea.ondblclick = function(){\r\n            confirmarEliminarTarea({...tarea});\r\n        }\r\n\r\n        opcionesDiv.appendChild(btnEstadoTarea);\r\n        opcionesDiv.appendChild(btnEliminarTarea);\r\n\r\n        contenedorTarea.appendChild(nombreTarea);\r\n        contenedorTarea.appendChild(opcionesDiv);\r\n\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        listadoTareas.appendChild(contenedorTarea);\r\n        \r\n    }); \r\n}\r\n\r\nfunction totalPendientes(){\r\n    const totalPendientes = tareas.filter(tarea => tarea.estado === \"0\");\r\n    const pendientesRadio = document.querySelector('#pendientes');\r\n\r\n    if(totalPendientes.length === 0){\r\n        pendientesRadio.disabled = true;\r\n    } else {\r\n        pendientesRadio.disabled = false;\r\n\r\n    }\r\n}\r\n\r\nfunction totalCompletas(){\r\n    const totalCompletas = tareas.filter(tarea => tarea.estado === \"1\");\r\n    const completasRadio = document.querySelector('#completadas');\r\n\r\n    if(totalCompletas.length === 0){\r\n        completasRadio.disabled = true;\r\n    } else {\r\n        completasRadio.disabled = false;\r\n\r\n    }\r\n}\r\n\r\nfunction mostrarFormulario(editar = false, tarea = {}){\r\n    const modal = document.createElement('DIV');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <form class=\"formulario nueva-tarea\">\r\n            <legend>${editar ? 'Editar Tarea' : 'AÃ±ade una nueva tarea'}</legend>\r\n            <div class=\"campo\">\r\n                <label>Tarea</label>\r\n                <input type=\"text\" name=\"tarea\" placeholder=\"${tarea.nombre ? 'Edita la Tarea' : 'AÃ±adir Tarea al Proyecto Actual'}\" id=\"tarea\" value=\"${tarea.nombre ? tarea.nombre : ''}\"/>\r\n            </div>\r\n            <div class=\"opciones\">\r\n                <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${tarea.nombre ? 'Guardar Cambios' : 'AÃ±adir Tarea'}\"/>\r\n                <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n            </div>\r\n        </form>\r\n    `;\r\n    \r\n    setTimeout(() => {\r\n         const formulario = document.querySelector('.formulario');\r\n         formulario.classList.add('animar');\r\n    }, 0);\r\n\r\n    modal.addEventListener('click', function(e){\r\n        e.preventDefault();\r\n\r\n        if(e.target.classList.contains('cerrar-modal')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('cerrar');    \r\n\r\n             setTimeout(() => {\r\n                modal.remove();\r\n            }, 500);\r\n        }\r\n\r\n        if(e.target.classList.contains('submit-nueva-tarea')){//contains: verifica que el elemnto html contenga cerrar-modal\r\n            const nombreTarea = document.querySelector('#tarea').value.trim();//trim: elimini el espacio al inicio y al final\r\n\r\n                if(nombreTarea === ''){\r\n                    //Mostrar una alerta de error\r\n                    mostrarAlerta('El nombre de la tarea es Obligatorio', 'error', document.querySelector('.formulario legend'));\r\n                    return;\r\n                }\r\n                if(editar){\r\n                    tarea.nombre = nombreTarea;\r\n                    actualizarTarea(tarea);\r\n                    \r\n                } else {\r\n                    agregarTarea(nombreTarea);\r\n                    \r\n                }\r\n        }\r\n    })\r\n\r\n    document.querySelector('.dashboard').appendChild(modal);\r\n}\r\n\r\n    \r\n    //Muestra un mensaje en la interfaz\r\n    function mostrarAlerta(mensaje, tipo, referencia){\r\n\r\n        //Previene la creacion de multiples alertas\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n\r\n        if(alertaPrevia){\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del legend\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        //Eliminar la alerta despues de unos segundos\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n\r\n    }\r\n\r\n    //Consultar el servidor para aÃ±adir una nueva tarea al proyecto actual\r\n    async function agregarTarea(tarea){\r\n      //Construir la peticion\r\n       const datos = new FormData();\r\n        datos.append('nombre', tarea);        \r\n        datos.append('proyectoId', obtenerProyecto());        \r\n\r\n        try{\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n\r\n            });\r\n           const resultado = await respuesta.json();\r\n\r\n           mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n            \r\n           if(resultado.tipo === 'exito'){\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 1000);  \r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado: \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas =[...tareas, tareaObj];//tengo una copia de las tareas, y le agrega la nueva tarea                \r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea){\r\n\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\" : \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea){\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        // for(let valor of datos.values()){ para poder ver los datos en el formdata antes de enviar al servidor\r\n        //     console.log(valor);\r\n        // }\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            \r\n            if(resultado.respuesta.tipo === 'exito'){\r\n                Swal.fire(\r\n                    resultado.respuesta.mensaje,\r\n                    resultado.respuesta.mensaje,\r\n                    'success'\r\n                );\r\n\r\n                const modal = document.querySelector('.modal');\r\n                if(modal){\r\n                    modal.remove();\r\n                }\r\n                tareas = tareas.map(tareaMemoria =>{//map crea un arreglo ya con la actualizacion\r\n                    if(tareaMemoria.id === id){\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n                mostrarTareas();   \r\n            }\r\n             \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea){\r\n        Swal.fire({\r\n            title: \"Eliminar Tarea?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si',\r\n            cancelButtonText: 'No'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n          });\r\n    }\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData;\r\n        datos.append('id',id);\r\n        datos.append('nombre',nombre);\r\n        datos.append('estado',estado);\r\n        datos.append('proyectoId',obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';  \r\n            const respuesta =  await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n\r\n            if(resultado.resultado){\r\n                // mostrarAlerta(\r\n                //     resultado.mensaje, \r\n                //     resultado.tipo, \r\n                //     document.querySelector('.contenedor-nueva-tarea')\r\n                // );\r\n                Swal.fire('Eliminado!', resultado.mensaje, 'success');\r\n\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== tarea.id);//genera una copia y solo trae todas que sean diferentes al id que seleccione\r\n                mostrarTareas();\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n\r\n    function obtenerProyecto(){\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());//sirve para iterar objetos como el formdata/entries trae los datos del obje\r\n        return proyecto.id;\r\n    }\r\n\r\n\r\n    function limpiarTareas(){\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        // listadoTareas.innerHTML = '';\r\n\r\n        while(listadoTareas.firstChild){\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n"]}